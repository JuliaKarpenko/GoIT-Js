"use strict";
//=================  дополнительное дз по модолю 1==========================
// const sharm = 15;
// const hurgada = 25;
// const taba = 6;

// let hotel = "";

// const requiredPlaces = prompt("Введите количество мест");
// if (Number.isInteger(+requiredPlaces) && +requiredPlaces > 0) {
//   if (+requiredPlaces <= sharm) {
//     hotel = "Sharm";
//   } else if (+requiredPlaces <= hurgada) {
//     hotel = "Hurgada";
//   } else if (+requiredPlaces <= taba) {
//     hotel = "Taba";
//   }
//   if (confirm(`хотите ли вы остаться в ${hotel}?`)) {
//     alert(`добро пожаловать в ${hotel}`);
//   } else if (!hotel) {
//     alert('Извините, столько мест нет ни в одной группе!');
//   } else {
//     alert("Нам очень жаль, приходите еще!");
//   }
// } else if (!requiredPlaces) {
//   alert("Нам очень жаль, приходите еще!");
// }

// ====================================ARRAYS==================

// const clients = ["Mango", "Ajax", "Poly", "Chelsey"];

// // -----------------------length----------------

// console.log("array length clients = ", clients.length);
// console.log("array clients, index[0] = ", clients[0]);
// console.log("array clients, index[1] = ", clients[1]);
// console.log("array clients, index[2] = ", clients[2]);

// clients.length = 3;
// console.log("array clients if change length = ", clients);

// // -----------------------JOIN doing a string from array ----------------
// console.log(' ');
// console.log('--------------JOIN doing a string from array--------------');

// let splitArray = clients.join(", ");
// console.log("array clients if join it with ',' create string = ", splitArray);

// // -----------------------SPLIT doing a array from string----------------

// console.log(' ');
// console.log('--------------SPLIT doing a array from string--------------');

// let arraySplit = "I'm a new array";
// console.log("defolt string  = ", arraySplit);

// arraySplit = arraySplit.split(' ');
// console.log("a string if use split = ", arraySplit);

// // -----------------------SHIFT returns first elem form array----------------

// console.log(' ');
// console.log('--------------SHIFT returns first elem form array--------------');

// let shiftArray = clients;
// console.log('It is coppy of array clients = ', shiftArray);

// let returnElem = shiftArray.shift();
// console.log('It is use shift on array and RETURN this value = ', returnElem);
// console.log('It is array use shift = ', shiftArray);

// // -----------------------UNSHIFT add first elem form array----------------

// console.log(' ');
// console.log('--------------UNSHIFT add first elem form array--------------');

// let unshiftArray = clients;
// unshiftArray.unshift("firstElem");
// console.log('new array use unshift = ', unshiftArray);

// // -----------------------PUSH add elem form array to the end ----------------

// console.log(' ');
// console.log('--------------PUSH add  elem form array to the end--------------');

// unshiftArray.push('END');
// console.log('new array use push = ', unshiftArray);

// // -----------------------POP delete elem form the end of array  ----------------

// console.log(' ');
// console.log('\n--------------POP delete elem form the end of array-------------- ');

// let popArray = clients;
// popArray.pop('END');
// console.log('new array use POP = ', popArray);

// // -----------------------SLISE cut array for interval  ----------------

// console.log(' ');
// console.log('--------------SLISE cut array use interval and dont change initial array -------------- ');

// let sliceArray = clients;
// let test = sliceArray.slice(0, 2);
// console.log('new array use SLISE = ', test);

// // ======================= SPLICE can to delete, add and replace elem of array ===================

// console.log(' ');
// console.log('--------------SPLICE can to delete, add and replace elem of array -------------- ');

// let spliceArray = ["Mango", "Ajax", "Poly", "Chelsey", ];;
// console.log('initial array = ',  spliceArray);
// spliceArray.splice(0, 2);
// console.log('new array use SPLISE, cut array using interval (0, 2) = ',  spliceArray);

// spliceArray.splice(3, 0, "NEW ELEM", "NEW ELEM");
// console.log('new array use SPLISE, add new elem to array BEFORE fist index what we wrote) = ',  spliceArray);

// spliceArray.splice(1, 3, "hi", "hi");
// console.log('new array use SPLISE, add new elem to array && delete old elem) = ',  spliceArray);

// // ======================= CONCAT - join 2 arrays ===================

// console.log(' ');
// console.log('-------------- CONCAT - join 2 arrays-------------- ');

// let fruitsArray = ["apple", "banannas", "lime"];
// let vegetablesArray = ["potatoes", "tomatos", "cucumber"];
// let newArray = fruitsArray.concat(vegetablesArray);
// console.log('initial array "fruitsArray"', fruitsArray);
// console.log('initial array "vegetablesArray"', vegetablesArray);
// console.log('concan two arrays "fruitsArray" and "vegetablesArray" = ', newArray);

// // ======================= REVERSE - sorting array ===================
// console.log(' ');
// console.log('-------------- REVERSE - sorting array -------------- ');
// console.log('sorting array in reverse way', newArray.reverse());

// let test123 = [1, 2, 3,4,5,6];
// test123.slice(3)
// console.log(test123);

// ========================== CYCLES===============

/*
  Напишите цикл, который предлагает, через prompt, ввести число больше 100. 
  
   Если посетитель ввёл другое число или нажал Cancel – попросить ввести ещё раз, 
   и так далее, пока не введет число больше 100.
  
  Предполагается, что посетитель вводит только числа, обрабатывать невалидный ввод 
  вроде строк 'qweqwe' в этой задаче необязательно.
  
  PS: используйте цикл do...while
*/
// let userInput;

// do {
//  userInput = +prompt("Enter a number more then 100");

// } while ( userInput < 100 );

               
// ----------------------------------------------------
/*
  Напишите скрипт, который выводит через console.log все 
  числа от min до max, с двумя исключениями: 
    
    - Для чисел, нацело делящихся на 3, вместо числа выводится строка 'Fizz'
    
    - Для чисел, нацело делящихся на 5, но не на 3, вместо числа выводится строка 'Buzz'
    
  PS: используйте цикл for
*/

// const min = 1;
// const max = 100;

// for ( let i = min; i < max; i+=1 ) {
//     if ( i % 3 === 0 ) {
//         console.log(`${i}  = Fizz`);
//     } else if (i % 5 === 0 && i % 3 !== 0) {
//         console.log(`${i} = Buzz`);
//     } else {
//         console.log(i);
//     }
// }
// ----------------------------------------------------
/*
  Напишите скрипт, который выбирает из массива numbers 
  все числа, которые больше чем значение переменной num, 
  записывая эти числа в массив newArray.
      
  В результате в массиве newArray будут все подходяшие числа.
      
  PS: используйте цикл for или for...of и оператор ветвления if
*/

// const numbers = [1, 3, 17, 5, 9, 14, 8, 14, 34, 18, 26];
// const num = 10;
// const newArray = [];

// for (let index of numbers) {
//     if (index > num ) {
//         newArray.push(index);
//     }
// }

// console.log(newArray);

// ------------------------------------------------
/*
  Напишите скрипт, который проверяет произвольную строку 
  в переменной string и находит в ней самое длинное слово,
  записывая его в переменную longestWord.
*/

// const string = "May the force be with you";
// let longestWord;

// const newArray = string.split(" ");
// console.log(newArray);
// longestWord = newArray[0];
// console.log(longestWord);

// for (const i of newArray) {
//     if (i.length > longestWord.length ) {
//         longestWord = i;
//     }
// }

// console.log(longestWord); // 'force'

// -------------------------------------------------------
/*
  Напишите скрипт который:
  
  - Запрашивает по очереди числа при помощи prompt и сохраняет их в массиве.
    Используйте do...while.
  - Проверять что пользователь ввел не число не обязательно
  - Заканчивает запрашивать числа как только пользователь нажмёт Cancel.
  - После того как ввод был завершен, если массив не пустой, 
    скрипт выводит сумму всех значений массива: "Сумма: <сумма всех значений в массиве>"
    Используйте цикл for...of
*/
// let userInput;
// const numbers = [];
// let total = 0;

// do {
//     userInput = +prompt("Please, enter a number");
//     if ( userInput !==0 ) {
//         numbers.push(userInput);
//     }
//     console.log(numbers);
// } while (userInput !== 0);

// if ( numbers.length !== 0 ) {
//     for (let i of numbers) {
//       total += i;
//     }
// }
// console.log(total);


// -------------------------------
/*
  ***ЗАДАНИЕ ПОВЫШЕННОЙ СЛОЖНОСТИ***
  
  Создайте игру угадай число.
  
  Есть массив чисел numbers, содержащий "верные" числа.
  Числа в массиве всегда идут по возрастанию, 1-5, 20-40, 2-100 и т.п.
  
  Просим пользователя ввести цифру от самого маленького,
  до самого большого элемента массива. Эти значения необходимо
  сохранить в переменные min и max. Учтите что массив произвольный,
  но элементы всегда идут по возрастанию.
  
  Пусть prompt говорит "Введите цифру между x и y", где x и y 
  соотвественно самый маленький и самый большой элемент массива.
  
  Но пользователь может ввести что угодно, необходимо проверить 
  что было введено. Преобразовать input в числовой тип и проверить 
  число ли это.
  
    - Если не число - выводим alert с сообщением о том, что было 
      введено не число.
    - Если число - проверить содержит ли в себе массив numbers это число.
    - Если содержит - выводим alert с сообщением 'Поздравляем, Вы угадали!'.
    - Есл не содержит - выводим alert с сообщением 'Сожалеем, Вы не угадали!'.
*/

// const numbers = [12, 15, 25, 37, 41];

// let minArr = numbers[0];
// let maxArr = numbers[numbers.length-1];
// let userInput;

// userInput = prompt(`Enter a number in range from ${minArr} to ${maxArr}`);

// if (isNaN(userInput)) {
//   alert('It is not a number');
// } else if (numbers.includes(Number(userInput)) === true ) {
//   alert ('You are rigth!');
// } else {
//   alert ('Sorry, try again');
// }

// // ------------------------------------------


// 1) Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Объедините их вместе.
// 2) Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// 3) Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// 4) Дан массив [1, 2, 3]. Сделайте из него массив [3, 2, 1].
// 5) Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// 6) Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// 7)  Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// 8) Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// 9) Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].
// 10) Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5].
// 11) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].
// 12)  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4].
// 13) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// 14) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// 15)  Дана строка, состоящая из символов, например, 'abcde'. Проверьте, что первым символом этой строки является буква 'a'. Если это так - выведите 'да', в противном случае выведите 'нет'.
// 16)   Дана строка с цифрами, например, '12345'. Проверьте, что первым символом этой строки является цифра 1, 2 или 3. Если это так - выведите 'да', в противном случае выведите 'нет'.
// 17)   Дана строка из 3-х цифр. Найдите сумму этих цифр. То есть сложите как числа первый символ строки, второй и третий.
// 18)   Дана строка из 6-ти цифр. Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. Если это так - выведите 'да', в противном случае выведите 'нет'. (edited)
// *Задачи на приемы работы с циклами на JavaScript*
// 1) С помощью цикла for сформируйте строку '123456789' и запишите ее в переменную str.
// 2)  С помощью цикла for сформируйте строку '987654321' и запишите ее в переменную str.
// 3) С помощью цикла for сформируйте строку '-1-2-3-4-5-6-7-8-9-' и запишите ее в переменную str.
// 4) Сумма элементов двух массивов - Напишите код, который создаёт массив элементов представляющих собой сумму соответствующих элементов заданных массивов.
// [1, 2, 3, 4, 5];
// [4, 5, 6];
// 5) Дан массив mas. Выведите его в формате индекс элемента — значение (через три дефиса). Каждый элемент с новой строки.
// {
//    mas = [15, 'hello', 'trump', 23, 'world', 999, 176];
// }
// 6) Дан массив mas. Выведите его в формате индекс элемента — значение (через дефис). Каждый элемент с новой строки. Выводить нужно те элементы, значение которых больше пяти (5).
// {
//    var mas = [2, 3, 4, 5, 6, 4, 77, 32, 4];
// }
// 7) создайте массив из чисел, примерно 5-10 чисел. Посчитайте сумму числе в массиве. Распечатайте сперва все исходные данные, потом распечатайте сумму чисел в массиве.
// 8) Создайте массив из чисел, примерно 5-10 чисел. Посчитайте массив, в котором каждый элемент это разница между соседними элементами исходного массива. Например первый элемент результирующего массива это разница между вторым и первым элементом исходного массива, второй элемент результирующего массива это разница третьего и второго элемент исх. массива. Распечатайте сперва исходные данные, потом распечатайте результирующим массив.
// 9) Удалить повторяющиеся элементы массива - верните массив, в котором удалены повторяющиеся элементы из массива arr (игнорируйте чувствительность к регистру).
// ["php", "php", "css", "css",
// "script", "script", "html", "html", "java"
// ];
// 10) Переместить элемент массива из одной позиции в другую - замените два соседних элемента в массиве.
// 11) Массив указанной длины - напишите скрипт который генерирует массив заданной длины 4, заполненный целыми числами, где каждое число больше предыдущего на единицу.
// 12)     Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось больше 10-ти.
// 13)  Дан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.
// *На цикл в цикле.*
// 12) Выведите на экран таблицу умножения (как в школьной тетради).
// 13) Заполните массив следующим образом: в первый элемент запишите '1', во второй '22', в третий '333' и так далее. Показать решение.
// 14) Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее.
// *Многомерные массивы*
// 15) Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]]. Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.
// 16) Дан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]. Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.
// *На флаги*
// 17) Дан массив с числами. Проверьте, что в этом массиве есть число 5. Если есть - выведите 'да', а если нет - выведите 'нет'.
// 18) Дано число, например 31. Проверьте, что это число не делится ни на одно другое число кроме себя самого и единицы. То есть в нашем случае нужно проверить, что число 31 не делится на все числа от 2 до 30. Если число не делится - выведите 'false', а если делится - выведите 'true'.
// 19) Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть - выведите 'да', а если нет - выведите 'нет'. (edited)
// Задачи javascript на циклы
// Задание 1 Вывести числа от 4 до 400 на экран.
// Задание 2 Вывести числа в последовательности: 4 7 10 13 с помощью цикла.
// Задание 3 Вывести числа 654 653 652 до нуля.
// Задание 4 Вывести все годы с 1983 до 2017.
// Задание 5 Вывести числа -4 -2 0 2 4 6 ...100.
// Задание 6 С помощью цикла напечатайте таблицу умножения на 7 от 1 до 9.
// Задание 7 Выведите с помощью цикла коды спецсимволов от 1000 до 2000. Напомню, что спецсимвол получается комбинацией &#число; Например &#1222;
// Задание 8 Дано число n=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла), и запишите его в переменную num
// Задание 9 Найти факториал числа, у пользователя запрашивается число, и в результате выдаётся факториал числа,(если ввести к примеру 5 то результат должен быть равен 120,
// потому что факториал 5 это 5*4*3*2*1)
// Задание 10 Найти последовательность Хэеса, то есть пользователь вводит число и в результате должно быть выдано сообщение, с самой последовательностью, количеством шагов,
// которое понадобилось для нахождения этой последовательности, и вершиной последовательности, это максимальное число из этой последовательности. Последовательность
// Хэеса считается так: если ввели число 9, то проверяем его, если оно чётное, делим на 2, если нечетное, умножаем на 3 и прибавляем 1, и так до тех пор пока число не
// будет равно 1.
// 9*3+1=28
// 28/2=14
// 14/2=7
// 7*3+1=22
// 22/2=11
// 11*3+1=34
// 34/2=17
// 17*3+1=52
// 52/2=26
// 26/2=13
// 13*3+1=40
// 40/2=20
// 20/2=10
// 10/2=5
// 5*3+1=16
// 16/2=8
// 8/2=4
// 4/2=2
// 2/2=1

/*
4.Пользователь вводит подряд 20 разных чисел(ввод осуществляется всех чисел только в 1 переменную),нужно посчитать сколько было инверсий. Пример:
5 2 5 3 6 4 8 9 2 4 1 6 8 5 4 7 9 7 1 5 = 9 инверсий, к примеру 5 2 - это инверсия то есть то число которое стоит слева больше того числа которое справа.
*/

/*
5.Пользователь вводит диапазон нужно вывести на экран все простые числа из этого диапазона. Простыми числами называются числа, которые имеют всего 2 делителя, то есть
делятся только на 1 и на самого себя! Пример простых чисел: 3,5,7,11,13,17,...

1. Посчитать сумму нечётных элементов массива.
2. Найти сумму элементов массива, элементы которого находятся между крайними отрицательными значениями.
3. Поменять местами элементы массива попарно.
4. Добавить отрицательный элемент массива в случайную позицию в массиве, затем слева от отрицательного элемента , отсортировать элементы по возрастанию, не затрагивая сам отрицательный элемент, а справа по убыванию, так же не затрагивая отрицательный элемент.
5. Посчитать в строке сколько букв, цифр и других символов.
6. Есть массив строк, найти в этом массиве самую короткую строку.
*/


/*
6. Дано произвольное целое число n. Написать программу, которая
разбивает число n на цифры и выводит их на экран;
подсчитывает сколько цифр в числе n;
находит сумму цифр числа n;
меняет порядок цифр числа n на обратный.
Пример: ввожу число 123
цифр в числе = 3
сумма = 6(это значение получили следующим образом 1+2+3)
обратный порядок = 321
*/

// *На цикл в цикле.*
// 12) Выведите на экран таблицу умножения (как в школьной тетради).

// for(let i = 1; i <= 9; i++) {
//   for(let j = 1; j <= 9; j++) { 
//     console.log(`${i} * ${j} = ${i*j}`);
//   }
// }

// 13) Заполните массив следующим образом: в первый элемент запишите '1', во второй '22', в третий '333' и так далее. Показать решение.

// const arr = [];
// for(let i = 1; i <= 4;  i++) { 
//   let str = '';
//   for(let j = 1; j <= i;  j++) {
//     str = str + i;
//   }
//   arr.push(str)
// }
// console.log(arr);

// 14) Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее.

// let arr = [];
// for (let i = 0; i <= 5; i++) {
//   let str = '';
//   for (let j = 0; j <= i; j++) {
//     str = str + 
//     ;
//   }
//   arr.push(str);
// }
// console.log(arr);

// *Многомерные массивы*
// 15) Дан двухмерный массив с числами, например [[1, 2, 3], [4, 5], [6]]. 
// Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.



// 16) Дан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]].
//  Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.

// *На флаги*
// 17) Дан массив с числами. Проверьте, что в этом массиве есть число 5. Если есть - выведите 'да', а если нет - выведите 'нет'.
// 18) Дано число, например 31. Проверьте, что это число не делится ни на одно другое число кроме себя самого и единицы. То есть в нашем случае нужно проверить, что число 31 не делится на все числа от 2 до 30. Если число не делится - выведите 'false', а если делится - выведите 'true'.
// 19) Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть - выведите 'да', а если нет - выведите 'нет'. (edited)
